// <auto-generated />
using System;
using DisneyApi.Core.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DisneyApi.Core.Models.Migrations
{
    [DbContext(typeof(DisneyDBContext))]
    partial class DisneyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DisneyApi.Core.Models.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagenTitulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("DisneyApi.Core.Models.Entities.PeliculaSerie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<string>("ImagenTitulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdGenero");

                    b.ToTable("PeliculaSerie");
                });

            modelBuilder.Entity("DisneyApi.Core.Models.Entities.Personaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("Historia")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<string>("ImagenTitulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("Personaje");
                });

            modelBuilder.Entity("DisneyApi.Core.Models.Entities.PersonajePeliculaSerie", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("int");

                    b.Property<int>("IdPeliculaSerie")
                        .HasColumnType("int");

                    b.HasKey("IdPersonaje", "IdPeliculaSerie");

                    b.HasIndex("IdPeliculaSerie");

                    b.ToTable("PersonajePeliculaSeries");
                });

            modelBuilder.Entity("DisneyApi.Core.Models.Entities.PeliculaSerie", b =>
                {
                    b.HasOne("DisneyApi.Core.Models.Entities.Genero", "Genero")
                        .WithMany("PeliculaSeries")
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("DisneyApi.Core.Models.Entities.Personaje", b =>
                {
                    b.HasOne("DisneyApi.Core.Models.Entities.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("DisneyApi.Core.Models.Entities.PersonajePeliculaSerie", b =>
                {
                    b.HasOne("DisneyApi.Core.Models.Entities.PeliculaSerie", "PeliculaSerie")
                        .WithMany("PersonajePeliculasSeries")
                        .HasForeignKey("IdPeliculaSerie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisneyApi.Core.Models.Entities.Personaje", "Personaje")
                        .WithMany("PersonajePeliculasSeries")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeliculaSerie");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("DisneyApi.Core.Models.Entities.Genero", b =>
                {
                    b.Navigation("PeliculaSeries");
                });

            modelBuilder.Entity("DisneyApi.Core.Models.Entities.PeliculaSerie", b =>
                {
                    b.Navigation("PersonajePeliculasSeries");
                });

            modelBuilder.Entity("DisneyApi.Core.Models.Entities.Personaje", b =>
                {
                    b.Navigation("PersonajePeliculasSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
